{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/hongonthi/notebookb63eda3264?scriptVersionId=238687407\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"cde2abaf","metadata":{"execution":{"iopub.execute_input":"2025-05-09T05:35:40.912795Z","iopub.status.busy":"2025-05-09T05:35:40.912523Z","iopub.status.idle":"2025-05-09T05:35:42.640455Z","shell.execute_reply":"2025-05-09T05:35:42.639707Z"},"papermill":{"duration":1.7322,"end_time":"2025-05-09T05:35:42.642054","exception":false,"start_time":"2025-05-09T05:35:40.909854","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np\n","import pandas as pd \n","import os\n","file_paths = []\n","for dirname, _, filenames in os.walk('/kaggle/input/mvtec-ad/screw/test'):\n","    for filename in filenames:\n","        file_paths.append(os.path.join(dirname, filename))"]},{"cell_type":"code","execution_count":2,"id":"42f7358e","metadata":{"execution":{"iopub.execute_input":"2025-05-09T05:35:42.64572Z","iopub.status.busy":"2025-05-09T05:35:42.645433Z","iopub.status.idle":"2025-05-09T05:36:38.996612Z","shell.execute_reply":"2025-05-09T05:36:38.995715Z"},"papermill":{"duration":56.354202,"end_time":"2025-05-09T05:36:38.997857","exception":false,"start_time":"2025-05-09T05:35:42.643655","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/albumentations/__init__.py:28: UserWarning: A new version of Albumentations is available: '2.0.6' (you have '2.0.4'). Upgrade using: pip install -U albumentations. To disable automatic update checks, set the environment variable NO_ALBUMENTATIONS_UPDATE to 1.\n","  check_for_updates()\n","Augmenting good: 100%|██████████| 41/41 [00:09<00:00,  4.38it/s]\n","Augmenting thread_top: 100%|██████████| 23/23 [00:08<00:00,  2.80it/s]\n","Augmenting scratch_neck: 100%|██████████| 25/25 [00:08<00:00,  3.03it/s]\n","Augmenting thread_side: 100%|██████████| 23/23 [00:07<00:00,  3.00it/s]\n","Augmenting scratch_head: 100%|██████████| 24/24 [00:08<00:00,  2.84it/s]\n","Augmenting manipulated_front: 100%|██████████| 24/24 [00:07<00:00,  3.02it/s]\n"]}],"source":["import os\n","import cv2\n","import albumentations as A\n","from tqdm import tqdm\n","\n","# Augmentation pipeline\n","augment_pipeline = A.Compose([\n","    A.HorizontalFlip(p=0.5),\n","    A.VerticalFlip(p=0.5),\n","    A.Rotate(limit=20, p=0.8),\n","    A.RandomBrightnessContrast(p=0.7),\n","    A.GaussianBlur(p=0.3),\n","    A.Resize(224, 224)\n","])\n","\n","def augment_class(src_folder, dst_folder, num_aug):\n","    os.makedirs(dst_folder, exist_ok=True)\n","    img_files = [f for f in os.listdir(src_folder) if f.endswith(('.jpg', '.png'))]\n","\n","    for img_name in tqdm(img_files, desc=f\"Augmenting {os.path.basename(src_folder)}\"):\n","        img_path = os.path.join(src_folder, img_name)\n","        image = cv2.imread(img_path)\n","        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","\n","        for i in range(num_aug):\n","            augmented = augment_pipeline(image=image)['image']\n","            out_name = f\"{os.path.splitext(img_name)[0]}_aug{i}.jpg\"\n","            out_path = os.path.join(dst_folder, out_name)\n","            cv2.imwrite(out_path, cv2.cvtColor(augmented, cv2.COLOR_RGB2BGR))\n","\n","def augment_all_classes(root_folder, output_folder, num_aug_defect=50, num_aug_good=4):\n","    os.makedirs(output_folder, exist_ok=True)\n","    all_classes = os.listdir(root_folder)\n","\n","    for class_name in all_classes:\n","        class_path = os.path.join(root_folder, class_name)\n","        dst_path = os.path.join(output_folder, class_name)\n","\n","        if class_name == 'good':\n","            augment_class(class_path, dst_path, num_aug=num_aug_good)\n","        else:\n","            augment_class(class_path, dst_path, num_aug=num_aug_defect)\n","\n","\n","augment_all_classes(\n","    root_folder='/kaggle/input/mvtec-ad/screw/test',               \n","    output_folder='augmented_dataset/screw',      \n","    num_aug_defect=20,\n","    num_aug_good=12\n",")\n"]}],"metadata":{"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"datasetId":1946896,"sourceId":3209332,"sourceType":"datasetVersion"}],"dockerImageVersionId":31011,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.11"},"papermill":{"default_parameters":{},"duration":64.330059,"end_time":"2025-05-09T05:36:40.929539","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-05-09T05:35:36.59948","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}